<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets">

    <ui:composition template="../templates/common.xhtml">
        <ui:define name="title">
            HTML Form data
        </ui:define>
        <ui:define name="sidebar">
            <ui:include src="../templates/sidenav.xhtml" />
        </ui:define>
        <ui:define name="main_content">
            <p>
                In JSF HTML form data can processed very simply using a managed bean. For each input element
                a managed bean contains a corresponding property that provides public getter and setter methods.
                In the JSF page all we need to do is binding the "value" attribute in input element to the beans
                property. When rendering the page, JSF takes care of converting input to appropriate type, validates it and sets the value to its bean property.
                The following example demonstrates the use form input and binding them to underlying managed bean.
 
            </p>
            <pre>
&lt;h:form&gt;
    &lt;h:outputLabel  value=&quot;First Name&quot; /&gt;
    &lt;h:inputText id=&quot;firstname&quot; value=&quot;\#{feedbackForm.firstName}&quot; &gt;
    &lt;/h:inputText&gt;
    &lt;h:outputLabel value=&quot;Surname&quot; /&gt;
    &lt;h:inputText id=&quot;surname&quot; value=&quot;\#{feedbackForm.surname}&quot; &gt;
    &lt;/h:inputText&gt;
    &lt;h:outputLabel  value=&quot;Email&quot; /&gt;
    &lt;h:inputText id=&quot;email&quot; value=&quot;\#{feedbackForm.email}&quot; &gt;
    &lt;/h:inputText&gt;
    &lt;h:outputLabel  value=&quot;Message&quot; /&gt;
    &lt;h:inputTextarea id=&quot;message&quot; value=&quot;\#{feedbackForm.message}&quot;&gt;
    &lt;/h:inputTextarea&gt;
    &lt;h:commandButton  value=&quot;Submit&quot; action=&quot;\#{feedbackForm.proccesPage()}&quot; /&gt;
&lt;/h:form&gt;
            </pre>
        </ui:define>
    </ui:composition>
</html>
