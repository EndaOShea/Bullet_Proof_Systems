<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets">

    <ui:composition template="../templates/common.xhtml">
        <ui:define name="title">
            Validators
        </ui:define>
        <ui:define name="sidebar">
            <ui:include src="../templates/sidenav.xhtml" />
        </ui:define>
        <ui:define name="main_content">
            <p>
                JSF provides following standard validation tags for validating form input data. These validation tags 
                can be placed in the body of a component tag.
            </p>
            <h4>Input string length </h4>
            <p>
                For validating the length of a input string we can use <code> &lt;f:validateLength&gt;</code> tag.
            </p>
            <h4>Numeric values</h4>
            <p>
                For validating integer values we can use <code>&lt;f:validateLongRange&gt; </code> tag 
                and for Floating point values we can use <code>&lt;f:validateDoubleRange&gt;</code>. 
                With both of these tags we can specify acceptable min and max value as attributes.
            </p>
            <h4>Regular expression</h4>
            <p>
                For validating input using a regex pattern we can use <code>&lt;f:validateRegex&gt;</code> tag and specify its 'pattern' attribute according which the input will be matched.
            </p>
            <h4>Custom validation</h4>
            <p>
                For validating input using a regex pattern we can use <code>&lt;f:validateRegex&gt;</code> tag and specify its 'pattern' attribute according which the input will be matched.
            </p>
        </ui:define>
    </ui:composition>
</html>
